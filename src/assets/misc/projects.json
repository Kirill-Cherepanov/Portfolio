[
  {
    "name": "Bloggy",
    "type": "a Blog/Social media Application",
    "technologies": [
      "React",
      "Typescript",
      "Node.js",
      "Express",
      "MongoDB + Mongoose",
      "Tailwind",
      "Redux",
      "RTK Query",
      "Cypress",
      "JWT",
      "Docker"
    ],
    "urls": {
      "deploy": "https://bloggy-kirill-cherepanov.netlify.app",
      "repo": "https://github.com/KissMyUSSR/bloggy"
    },
    "description": [
      "Developed a Social media app that is focused on posting.",
      "Adopted an exceedingly scalable feature-based architecture for the front-end and a simplified \"Clean architecture\" on the back-end.",
      "Designed a highly intuitive and responsive user interface that enables most pleasant user experience.",
      "Set up a secure authentification/authorization process that was enabled by using dual JWT tokens and email verification.",
      "Added surface-level end-to-end tests with Cypress.",
      "Deployed the API on fly.io with Docker."
    ]
  },
  {
    "name": "Tic-tac-toe Multiplayer",
    "type": "a Multiplayer + AI game",
    "technologies": ["React", "Typescript", "Node.js", "Socket.io", "Sass"],
    "urls": {
      "deploy": "https://tic-tac-toe-kirill-cherepanov.netlify.app/",
      "repo": "https://github.com/KissMyUSSR/tic-tac-toe-multiplayer-react"
    },
    "description": [
      "Developed a fully responsive web application that is a Singleplayer + Multiplayer + AI game.",
      "Utilized websockets to enable bi-directional communication between clients and the server.",
      "Designed a minimalistic yet intuitive opponent search feature.",
      "Applied the mini-max algorithm to add Artificial Intelligence to keep players entertained even in the absence of other players."
    ],
    "essay": "First of all, don't be deceived. While this project is based on tic-tac-toe which is a very simple game, my main focus was on developing a multiplayer that could be transferred to any other game and this project is meant to be centered mostly around it. Although, in retrospect, it's still quite improvable.\\n\\nI began this project in the spring of 2022. At the time I didn't yet know React and didn't consider learning it for this project. So everything was written in vanilla TypeScript.\\n\\nAt first it was just a single-player game that you can find [here](https://github.com/KissMyUSSR/tic-tac-toe-game). Then, I decided that stopping would be pointless, so I added multiplayer as well as AI.\\n\\nI didn't know much about the back-end and didn't even know what I needed to complete the project. Having improvised on the go, I built much of what I have at this point, except for the timer, search with settings and AI. But my code became very convoluted and I had a lot of vulnerabilities on the back-end - anyone could easily cheat and even crush the server. So I couldn't proceed without rewriting the whole codebase. So I gave up. I didn't upload the project at the time because it was incomplete, but decided to do it now anyway a couple months later. You can take a look at it [here](https://github.com/KissMyUSSR/tic-tac-toe-multiplayer).\\n\\nAnd I rewrote everything from scratch, making the code much more maintainable and scalable. I used React for it and decided to stick with the same stack on the back-end (though I had to rewrite it anyways to keep up with the changes on the front-end).\\n\\nInitially I had a database in the form of a JSON file. But soon realized that there were many problems with working with such a thing. It was mainly about concurrent file writes. It requires some heavy lifting to manage it and that's why I should have used one of the many databases that do it automatically (most of the popular ones). But since I didn't really need a database in that project all that much, I opted against it, and instead decided to keep all the data in a variable."
  },
  {
    "name": "Meme generator",
    "type": "an Image Editor",
    "technologies": ["React", "Sass", "Canvas API", "Imgflip API"],
    "urls": {
      "deploy": "https://kissmyussr.github.io/meme-generator/",
      "repo": "https://github.com/KissMyUSSR/meme-generator"
    },
    "description": [
      "Created a fully responsive web application to edit…to them, as well as applying basic image filters.",
      "Used canvas to imprint changes onto a given image …t at the expense of accuracy of image generation.",
      "Bootstrapped the application with an API for popular meme images.",
      "Designed an eye-pleasing user interface."
    ]
  }
]
